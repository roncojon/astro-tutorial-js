---
import PostForm from "../components/PostForm";
import BaseLayout from "../layouts/BaseLayout.astro";

export const prerender = false;
const pageTitle = "Post editor";
---

<BaseLayout pageTitle={pageTitle}>
  <PostForm client:load />
</BaseLayout>

<!-- 
  ---
import BaseLayout from "../layouts/BaseLayout.astro";

export const prerender = false;
const pageTitle = "Post editor";
---

<BaseLayout pageTitle={pageTitle}>
  <div id="editor-container"></div>

  <script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      //@ts-ignore
      tinymce.init({
        selector: '#editor-container',
        height: 500,
        menubar: false,
        plugins: [
          'advlist autolink lists link image charmap print preview anchor',
          'searchreplace visualblocks code fullscreen',
          'insertdatetime media table paste code help wordcount'
        ],
        toolbar: 'undo redo | formatselect | bold italic backcolor | ' +
                 'alignleft aligncenter alignright alignjustify | ' +
                 'bullist numlist outdent indent | removeformat | help',
      //@ts-ignore

        setup: (editor) => {
          editor.on('init', () => {
            editor.setContent('<p>This is the initial content of the editor</p>');
          });

          editor.on('change', () => {
            const content = editor.getContent();
            onContentChange(content);
          });
        },
        // @ts-ignore
        images_upload_handler: async (blobInfo, success, failure) => {
          const formData = new FormData();
          formData.append('file', blobInfo.blob());
          try {
            const response = await fetch('/api/upload-image', {
              method: 'POST',
              body: formData,
            });
            const result = await response.json();
            success(result.secure_url);
          } catch (err) {
            failure('Image upload failed');
          }
        },
      });
    });
// @ts-ignore
    function onContentChange(content) {
      // Placeholder function to handle content change
      console.log('Editor content changed:', content);
    }
  </script>
</BaseLayout>

 -->